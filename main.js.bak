//import {fromLonLat} from 'ol/proj';

//const { Tile } = require("ol");

//const { default: LayerGroup } = require("ol/layer/Group");

window.onload = init;

//

function init(){
  //const center = fromLonLat([100.19,16.78],'EPSG:3857');

  const map = new ol.Map({
    view: new ol.View({
      center: [11020629.59,2037548.54],
      zoom: 7.5,
      maxZoom: 20,
      minZoom: 3
      //extent: [12400753.576694038, -5658730.000549673, 17174426.336716905, -980228.5067132516]
    }),
    layers: [
      new ol.layer.Tile({
        source: new ol.source.OSM(),
        visible: true,
        title: 'OSMStandard'
      }),
    ],
    target: 'js-map'
  })

  // Rainfall
  const Rainfall = new ol.layer.Tile({
    source: new ol.source.TileWMS({
      url: 'https://landslide.gis-cdn.net/geoserver/Landslide/wms?',
      params: {'LAYERS':'Landslide:Landslide_N', 'TILED': true},
      serverType: 'geoserver',
      transition: 0
      }),
      visible: true,
      title: 'LandSlide'
  })

  // temparature
  const Temperature = new ol.layer.Tile({
    source: new ol.source.TileWMS({
      url:'https://landslide.gis-cdn.net/geoserver/Landslide/wms?',
      params: {'LAYERS': 'Landslide:LandSlide_Day', 'TILED': true},
      serverType: 'geoserver',
      transition: 0
      }),
      visible: false,
      title: 'LandSlide_daily'
  })

  // Rain Daily
  const Rain_daily = new ol.layer.Tile({
    source: new ol.source.TileWMS({
      url: 'https://landslide.gis-cdn.net/geoserver/Landslide/wms?',
      params: {'LAYERS':'Landslide:Rain_Day', 'TILED': true},
      serverType: 'geoserver',
      transition: 0
      }),
      visible: false,
      title: 'Rain_day'
  })

  const baseLayerGroup = new ol.layer.Group({
    layers: [Rainfall, Temperature, Rain_daily]
  })
  map.addLayer(baseLayerGroup);

  // layer switcher
  const baseLayerElements = document.querySelectorAll('.sidebar > input[type=radio]')
  for(let baseLayerElement of baseLayerElements){
    baseLayerElement.addEventListener('change', function(){
     let baseLayerElementValue = this.value;
     baseLayerGroup.getLayers().forEach(function(element, index, array){
       let baseLayerName = element.get('title');
       element.setVisible(baseLayerName === baseLayerElementValue)
     })
     })
  }

  //ขอบเขตจังหวัด
  const PV = new ol.layer.Tile({
    source: new ol.source.TileWMS({
      url: 'https://landslide.gis-cdn.net/geoserver/Landslide/wms?',
      params: {'LAYERS': 'Landslide:North', 'TILED': true},
      serverType: 'geoserver',
      transition: 0,
      }),
      visible: true,
      zIndex: 1,
      title: 'PV'
  })

  //ขอบเขตอำเภอ
  const AP = new ol.layer.Tile({
    source: new ol.source.TileWMS({
      url: 'https://landslide.gis-cdn.net/geoserver/Landslide/wms?',
      params: {'LAYERS': 'Landslide:Amphoe', 'TILED': true},
      serverType: 'geoserver',
      transition: 0,
      }),
      visible: false,
      zIndex: 1,
      opacity: 1,
      title: 'AP'
  })


  // Raster Tile Layer Group
  const Administrative = new ol.layer.Group({
    layers:[
      PV, AP
    ]
  })
  map.addLayer(Administrative);

  // Layer Switcher Logic for Raster Tile Layers
  const tileRasterLayerElements = document.querySelectorAll('.sidebar > input[type=checkbox]');
  for(let tileRasterLayerElement of tileRasterLayerElements){
    tileRasterLayerElement.addEventListener('change', function(){
      let tileRasterLayerElementValue = this.value;
      let tileRasterLayer;

      Administrative.getLayers().forEach(function(element, index, array){
        if(tileRasterLayerElementValue === element.get('title')){
          tileRasterLayer = element;
        }
      })
      this.checked ? tileRasterLayer.setVisible(true) : tileRasterLayer.setVisible(false)
    })
  }
} 
